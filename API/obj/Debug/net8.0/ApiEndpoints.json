[
  {
    "ContainingType": "API.Controllers.GraphController",
    "Method": "GetAllGraphsAsync",
    "RelativePath": "api/Graph",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.List\u00601[[API.Models.GraphList, API, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "API.Controllers.GraphController",
    "Method": "GetGraphdatasAsync",
    "RelativePath": "api/Graph/{graphId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "graphId",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "API.Models.Graphdata",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "API.Controllers.GraphController",
    "Method": "CreateGraphDataAsync",
    "RelativePath": "api/Graph/createData/{graphId}",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "graphId",
        "Type": "System.String",
        "IsRequired": true
      },
      {
        "Name": "request",
        "Type": "API.Models.GraphdataRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "API.Models.Graphdata",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "API.Controllers.GraphController",
    "Method": "CreateNewGraphAsync",
    "RelativePath": "api/Graph/creategraph",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "API.Models.Graphdata",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "API.Models.Graphdata",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "API.Controllers.GraphController",
    "Method": "DeleteGraphDataAsync",
    "RelativePath": "api/Graph/deleteData/{graphId}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "graphId",
        "Type": "System.String",
        "IsRequired": true
      },
      {
        "Name": "request",
        "Type": "API.Models.GraphdataRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "API.Models.Graphdata",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "API.Controllers.WeatherForecastController",
    "Method": "Get",
    "RelativePath": "WeatherForecast",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[API.WeatherForecast, API, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ],
    "EndpointName": "GetWeatherForecast"
  }
]